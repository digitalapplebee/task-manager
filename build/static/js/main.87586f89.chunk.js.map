{"version":3,"sources":["actions/actionTypes.js","reducers/tasks.js","reducers/index.js","store/configureStore.js","actions/tasks.js","components/Header/TaskTextField/index.jsx","components/Header/index.jsx","components/Content/TaskRow/index.jsx","components/Footer/FooterActions/index.jsx","components/Footer/index.jsx","components/Content/TaskList/index.jsx","containers/TaskApp/index.jsx","index.js"],"names":["initialState","reducers","combineReducers","tasks","state","action","type","types","task_id","length","assignee","task_title","deadline","task_description","completed","map","task","filter","alreadyCompleted","every","persistConfig","key","storage","persistedReducer","persistReducer","rootReducers","addTask","editTask","removeTask","completeTask","completeAll","removeCompleted","TaskTextField","title","description","changeInput","event","value","target","setState","handleSubmit","props","onSubmit","this","className","placeholder","onChange","cols","rows","onClick","Component","Header","actions","TaskRow","addActiveClass","prevState","active","handleEditing","editing","handleEditingDone","keyCode","handleDataSubmit","id","handleEditTask","NotificationManager","success","handleRemoveTask","handleCompleteTask","viewStyle","editStyle","display","checked","style","width","styles","notCompleted","onDoubleClick","onKeyDown","valuedefault","color","textDecoration","backgroundColor","FooterActions","currentFilter","handleFilter","handleRemoveCompleted","handleCompleteAll","RadioButton","name","defaultSelected","e","label","Footer","leftTasks","reduce","count","Fragment","TaskList","filteredTasks","bind","connect","dispatch","bindActionCreators","taskActions","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.87586f89.chunk.js","sourcesContent":["export default {\r\n  ADD_TASK: \"ADD_TASK\",\r\n  EDIT_TASK: \"EDIT_TASK\",\r\n  REMOVE_TASK: \"REMOVE_TASK\",\r\n  COMPLETE_TASK: \"COMPLETE_TASK\",\r\n  TOGGLE_COMPLETED_ALL: \"TOGGLE_COMPLETED_ALL\",\r\n  REMOVE_COMPLETED: \"REMOVE_COMPLETED\"\r\n}\r\n","import types from \"../actions/actionTypes\"\r\n\r\nconst initialState = []\r\n\r\nexport default (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case types.ADD_TASK:\r\n      return [\r\n        ...state,\r\n        {\r\n          task_id: state.length + 1,\r\n          assignee: action.assignee,\r\n          task_title: action.task_title,\r\n          deadline: action.deadline,\r\n          task_description: action.task_description,\r\n          completed: false\r\n        }\r\n      ]\r\n    case types.EDIT_TASK:\r\n      return state.map(task =>\r\n        task.task_id === action.task_id\r\n          ? {\r\n              ...task,\r\n              task_id: action.task_id,\r\n              task_description: action.task_description,\r\n              task_title: action.task_title,\r\n              deadline: action.deadline,\r\n              assignee: action.assignee\r\n            }\r\n          : task\r\n      )\r\n    case types.REMOVE_TASK:\r\n      return state.filter(task => task.task_id !== action.task_id)\r\n    case types.COMPLETE_TASK:\r\n      return state.map(task =>\r\n        task.task_id === action.task_id\r\n          ? {\r\n              ...task,\r\n              completed: !task.completed\r\n            }\r\n          : task\r\n      )\r\n    case types.TOGGLE_COMPLETED_ALL:\r\n      const alreadyCompleted = state.every(({ completed }) => completed)\r\n      return state.map(task => ({\r\n        ...task,\r\n        completed: !alreadyCompleted\r\n      }))\r\n    case types.REMOVE_COMPLETED:\r\n      return state.filter(task => task.completed === false)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\n\r\nimport tasks from \"./tasks\"\r\n\r\nconst reducers = combineReducers({\r\n  tasks\r\n})\r\n\r\nexport default reducers\r\n","import { createStore } from \"redux\"\r\nimport { persistStore, persistReducer } from \"redux-persist\"\r\nimport storage from \"redux-persist/lib/storage\"\r\nimport rootReducers from \"../reducers\"\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducers)\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer)\r\n  let persistor = persistStore(store)\r\n  return { store, persistor }\r\n}\r\n","import types from \"./actionTypes\"\r\n\r\nexport const addTask = (task_title, task_description, assignee, deadline) => ({\r\n  type: types.ADD_TASK,\r\n  task_title,\r\n  task_description,\r\n  assignee,\r\n  deadline\r\n})\r\n\r\nexport const editTask = (\r\n  task_id,\r\n  task_title,\r\n  task_description,\r\n  assignee,\r\n  deadline\r\n) => ({\r\n  type: types.EDIT_TASK,\r\n  task_id,\r\n  task_title,\r\n  task_description,\r\n  assignee,\r\n  deadline\r\n})\r\n\r\nexport const removeTask = task_id => ({\r\n  type: types.REMOVE_TASK,\r\n  task_id\r\n})\r\n\r\nexport const completeTask = task_id => ({\r\n  type: types.COMPLETE_TASK,\r\n  task_id\r\n})\r\n\r\nexport const completeAll = () => ({\r\n  type: types.TOGGLE_COMPLETED_ALL\r\n})\r\n\r\nexport const removeCompleted = () => ({\r\n  type: types.REMOVE_COMPLETED\r\n})\r\n","import React, { Component } from \"react\"\r\nimport \"./task-text-field.css\"\r\n\r\nclass TaskTextField extends Component {\r\n  state = {\r\n    assignee: \"\",\r\n    title: \"\",\r\n    deadline: \"\",\r\n    description: \"\"\r\n  }\r\n\r\n  changeInput = type => event => {\r\n    const { value } = event.target\r\n    this.setState({\r\n      [type]: value\r\n    })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.props.onSubmit(\r\n      this.state.title,\r\n      this.state.description,\r\n      this.state.assignee,\r\n      this.state.deadline\r\n    )\r\n    this.setState({ assignee: \"\", title: \"\", description: \"\", deadline: \"\" })\r\n  }\r\n\r\n  render() {\r\n    const { assignee, title, deadline, description } = this.state\r\n\r\n    return (\r\n      <div className=\"task-text-field-container\">\r\n        <div className=\"flex-container\">\r\n          <p className=\"flex-item\">Assignee:</p>\r\n          <input\r\n            type=\"text\"\r\n            value={assignee}\r\n            placeholder=\"Input your task assignee here\"\r\n            onChange={this.changeInput(\"assignee\")}\r\n            className=\"raw-item\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-container\">\r\n          <p className=\"flex-item\">Task title:</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Input your task title here\"\r\n            value={title}\r\n            onChange={this.changeInput(\"title\")}\r\n            className=\"raw-item\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-container\">\r\n          <p className=\"flex-item\">Deadline:</p>\r\n          <input\r\n            type=\"date\"\r\n            value={deadline}\r\n            onChange={this.changeInput(\"deadline\")}\r\n            className=\"raw-item\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-container\">\r\n          <p className=\"flex-item\">Task description:</p>\r\n          <textarea\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            value={description}\r\n            placeholder=\"Input your task description here\"\r\n            onChange={this.changeInput(\"description\")}\r\n            className=\"raw-item\"\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div className=\"button-submit-container\">\r\n          <button onClick={this.handleSubmit} className=\"button-submit\">\r\n            Add task\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskTextField\r\n","import React, { Component } from \"react\"\r\nimport TaskTextField from \"./TaskTextField\"\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { addTask } = this.props.actions\r\n\r\n    return (\r\n      <TaskTextField\r\n        onSubmit={(task_title, task_description, assignee, deadline) =>\r\n          addTask(task_title, task_description, assignee, deadline)\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from \"react\"\r\nimport { NotificationContainer, NotificationManager } from \"react-notifications\"\r\nimport \"react-notifications/lib/notifications.css\"\r\nimport \"./task-row.css\"\r\n\r\nclass TaskRow extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const { task } = this.props\r\n\r\n    this.state = {\r\n      active: false,\r\n      editing: false,\r\n      id: task.task_id,\r\n      assignee: task.assignee,\r\n      title: task.task_title,\r\n      deadline: task.deadline,\r\n      description: task.task_description\r\n    }\r\n  }\r\n\r\n  addActiveClass = () =>\r\n    this.setState(prevState => ({ active: !prevState.active }))\r\n\r\n  handleEditing = () => this.setState({ editing: true })\r\n\r\n  handleEditingDone = event => {\r\n    if (event.keyCode === 13) {\r\n      this.setState({ editing: false })\r\n      this.handleDataSubmit()\r\n    }\r\n  }\r\n\r\n  changeInput = type => event => {\r\n    const { value } = event.target\r\n    this.setState({\r\n      [type]: value\r\n    })\r\n  }\r\n\r\n  handleDataSubmit = () => {\r\n    const { id, title, description, assignee, deadline } = this.state\r\n    this.props.handleEditTask(id, title, description, assignee, deadline)\r\n\r\n    NotificationManager.success(\"Data updated\", \"Done\")\r\n  }\r\n\r\n  render() {\r\n    const { task, handleRemoveTask, handleCompleteTask } = this.props\r\n    const { active, assignee, title, deadline, description } = this.state\r\n\r\n    let viewStyle = {}\r\n    let editStyle = {}\r\n\r\n    if (this.state.editing) {\r\n      viewStyle.display = \"none\"\r\n    } else {\r\n      editStyle.display = \"none\"\r\n    }\r\n\r\n    return (\r\n      <div className=\"task-row-container\">\r\n        <div className=\"task-row-item\">\r\n          <div className=\"task-row-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.completed}\r\n              onChange={handleCompleteTask(task.task_id)}\r\n            />\r\n            <span className=\"chechmark\"></span>\r\n          </div>\r\n\r\n          <div style={{ width: \"100%\" }}>\r\n            <div\r\n              className={active ? \"accordion\" : \"accordion active\"}\r\n              style={task.completed ? styles.completed : styles.notCompleted}\r\n            >\r\n              <div className=\"task-row-container-items\">\r\n                <div>\r\n                  <span style={viewStyle} onDoubleClick={this.handleEditing}>\r\n                    [{task.assignee}]\r\n                  </span>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={this.changeInput(\"assignee\")}\r\n                    onKeyDown={this.handleEditingDone}\r\n                    value={assignee}\r\n                    style={editStyle}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <span style={viewStyle} onDoubleClick={this.handleEditing}>\r\n                    Task title: {task.task_title}\r\n                  </span>\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={this.changeInput(\"title\")}\r\n                    onKeyDown={this.handleEditingDone}\r\n                    value={title}\r\n                    style={editStyle}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <span style={viewStyle} onDoubleClick={this.handleEditing}>\r\n                    Deadline: {task.deadline}\r\n                  </span>\r\n                  <input\r\n                    type=\"date\"\r\n                    onKeyDown={this.handleEditingDone}\r\n                    onChange={this.changeInput(\"deadline\")}\r\n                    value={deadline}\r\n                    valuedefault={deadline}\r\n                    style={editStyle}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={active ? \"panel panelNotActive\" : \"panel panelActive\"}\r\n            >\r\n              <textarea\r\n                className=\"description\"\r\n                value={description}\r\n                onChange={this.changeInput(\"description\")}\r\n              ></textarea>\r\n              <button\r\n                onClick={this.handleDataSubmit}\r\n                className=\"task-row-description-save__button\"\r\n              >\r\n                Save description\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {active ? (\r\n            <button\r\n              onClick={this.addActiveClass}\r\n              className=\"accordion up-down-arrow\"\r\n            >\r\n              &uarr;\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={this.addActiveClass}\r\n              className=\"accordion up-down-arrow\"\r\n            >\r\n              &darr;\r\n            </button>\r\n          )}\r\n        </div>\r\n        <button\r\n          onClick={handleRemoveTask(task.task_id)}\r\n          className=\"task-row-remove-button\"\r\n        >\r\n          &#x0078;\r\n        </button>\r\n        <NotificationContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  completed: {\r\n    color: \"gray\",\r\n    textDecoration: \"line-through\",\r\n    backgroundColor: \"rgba(242,60,80,0.4)\"\r\n  },\r\n  notCompleted: {\r\n    backgroundColor: \"rgba(54,177,191,0.4)\"\r\n  }\r\n}\r\n\r\nexport default TaskRow\r\n","import React from \"react\"\r\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\"\r\nimport \"./footer-actions.css\"\r\n\r\nconst FooterActions = ({\r\n  currentFilter,\r\n  handleFilter,\r\n  handleRemoveCompleted,\r\n  handleCompleteAll\r\n}) => (\r\n  <div className=\"footer-actions-container\">\r\n    <RadioButtonGroup\r\n      name=\"filter\"\r\n      defaultSelected={currentFilter}\r\n      onChange={(e, value) => handleFilter(value)}\r\n      className=\"footer-actions-radio-button-group\"\r\n    >\r\n      <RadioButton\r\n        label=\"All\"\r\n        value=\"all\"\r\n        className=\"footer-actions-radio-button\"\r\n      />\r\n      <RadioButton\r\n        label=\"Active\"\r\n        value=\"active\"\r\n        className=\"footer-actions-radio-button\"\r\n      />\r\n      <RadioButton\r\n        label=\"Completed\"\r\n        value=\"completed\"\r\n        className=\"footer-actions-radio-button\"\r\n      />\r\n    </RadioButtonGroup>\r\n    <button\r\n      onClick={handleRemoveCompleted}\r\n      className=\"footer-actions-clear-complete__button\"\r\n    >\r\n      Clear completed\r\n    </button>\r\n    <button\r\n      onClick={handleCompleteAll}\r\n      className=\"footer-actions-done-all__button\"\r\n    >\r\n      Done all\r\n    </button>\r\n  </div>\r\n)\r\n\r\nexport default FooterActions\r\n","import React from \"react\"\r\nimport FooterActions from \"./FooterActions\"\r\n\r\nimport \"./footer.css\"\r\n\r\nconst Footer = ({\r\n  tasks,\r\n  currentFilter,\r\n  handleFilter,\r\n  handleRemoveCompleted,\r\n  handleCompleteAll\r\n}) => {\r\n  const leftTasks = tasks.reduce(\r\n    (count, { completed }) => (completed ? count : count + 1),\r\n    0\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <hr className=\"footer-divider\" />\r\n      <div className=\"footer-container\">\r\n        <span className=\"footer-items-count\">{leftTasks} Tasks left</span>\r\n        <FooterActions\r\n          currentFilter={currentFilter}\r\n          handleFilter={handleFilter}\r\n          handleRemoveCompleted={handleRemoveCompleted}\r\n          handleCompleteAll={handleCompleteAll}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from \"react\"\r\nimport TaskRow from \"../TaskRow\"\r\nimport Footer from \"../../Footer\"\r\nimport \"./task-list.css\"\r\n\r\nclass TaskList extends Component {\r\n  state = {\r\n    currentFilter: \"all\"\r\n  }\r\n\r\n  handleCompleteTask(task_id) {\r\n    return () => this.props.actions.completeTask(task_id)\r\n  }\r\n\r\n  handleRemoveTask(task_id) {\r\n    return () => this.props.actions.removeTask(task_id)\r\n  }\r\n\r\n  handleFilter(filter) {\r\n    this.setState({\r\n      currentFilter: filter\r\n    })\r\n  }\r\n\r\n  handleRemoveCompleted() {\r\n    this.props.actions.removeCompleted()\r\n  }\r\n\r\n  handleCompleteAll() {\r\n    this.props.actions.completeAll()\r\n  }\r\n\r\n  handleEditTask(task_id, task_title, task_description, assignee, deadline) {\r\n    this.props.actions.editTask(\r\n      task_id,\r\n      task_title,\r\n      task_description,\r\n      assignee,\r\n      deadline\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { tasks } = this.props\r\n    const { currentFilter } = this.state\r\n\r\n    const filteredTasks = tasks.filter(({ completed }) => {\r\n      switch (currentFilter) {\r\n        case \"completed\":\r\n          return completed\r\n        case \"active\":\r\n          return !completed\r\n        default:\r\n          return true\r\n      }\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"task-list-container\">\r\n          {filteredTasks.map(task => (\r\n            <TaskRow\r\n              key={task.task_id}\r\n              task={task}\r\n              handleEditTask={this.handleEditTask.bind(this)}\r\n              handleCompleteTask={this.handleCompleteTask.bind(this)}\r\n              handleRemoveTask={this.handleRemoveTask.bind(this)}\r\n            />\r\n          ))}\r\n        </div>\r\n        <Footer\r\n          tasks={tasks}\r\n          handleFilter={this.handleFilter.bind(this)}\r\n          currentFilter={currentFilter}\r\n          handleRemoveCompleted={this.handleRemoveCompleted.bind(this)}\r\n          handleCompleteAll={this.handleCompleteAll.bind(this)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskList\r\n","import React from \"react\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport { connect } from \"react-redux\"\r\nimport * as taskActions from \"../../actions/tasks\"\r\n\r\nimport { MuiThemeProvider } from \"material-ui/styles\"\r\n\r\nimport Header from \"../../components/Header\"\r\nimport TaskList from \"../../components/Content/TaskList\"\r\n\r\nimport \"./task-app.css\"\r\n\r\nconst TaskApp = ({ tasks, actions }) => (\r\n  <MuiThemeProvider>\r\n    <div className=\"app-container\">\r\n      <div className=\"app-content\">\r\n        <Header actions={actions} />\r\n        <TaskList tasks={tasks} actions={actions} />\r\n      </div>\r\n    </div>\r\n  </MuiThemeProvider>\r\n)\r\n\r\nconst mapStateToProps = ({ tasks }) => ({\r\n  tasks\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  actions: bindActionCreators(taskActions, dispatch)\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskApp)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport { PersistGate } from \"redux-persist/es/integration/react\"\r\nimport configureStore from \"./store/configureStore\"\r\nimport TaskApp from \"./containers/TaskApp\"\r\n\r\nconst { persistor, store } = configureStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <TaskApp />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}